# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          head=${{ github.event.pull_request.head.sha }}
          target_branch=origin/main

          # Check if there is a common ancestor
          if ! git merge-base --is-ancestor "$target_branch" "$head";
          then
            echo "This branch is not up to date with main"
            exit 1
          else
            # If there is a common ancestor, confirm there are no merge commits,
            # which would indicate this branch has not been rebased on target,
            # and _may_ have had the target merged in.
            common_ancestor=$(git merge-base "$head" "$target_branch")
            git rev-list --first-parent "$head" "^$common_ancestor" | while read -r commit_hash; do
              parent_count=$(git show --no-patch --format=%P "$commit_hash" | wc -w)
              if [[ $parent_count -gt 1 ]];
              then
                echo "Merge commit found: $commit_hash"
                echo "Please rebase on target"
                exit 1
              fi
            done
          fi
